@import '../base/mixins';
/**
 * Button
 * Needs to account for editor style and not overreach
 */
 button:where(:not([role='presentation']):not(.components-button):not([class*="navigation"])) {
 	@include button-main-styles;
 	@include button-hover-styles;
 }

 a.button {
	text-decoration: none;
	@include button-main-styles;
 	@include button-hover-styles;
 }
/**
 * Block Options
 */
 .wp-block-button {
	.wp-block-button__link {
		@include button-hover-styles;
		@include button-padding-border-styles;
		text-decoration: none;
    	transition: var(--wp--custom--animation--transition-type) var(--wp--custom--animation--transition-duration);
	}
	&.is-style-outline {
		.wp-block-button__link {
			--wp--custom--button--color--text: var(--wp--custom--button--outline--color--text);
			--wp--custom--button--color--background: transparent;
			--wp--custom--button--border--color: var(--wp--custom--button--outline--border--color);
			--wp--custom--button--hover--color--background: var(--wp--custom--color--background);
			--wp--custom--button--hover--color--text: var(--wp--custom--color--foreground);
			--wp--custom--button--hover--border--color: var(--wp--custom--color--foreground);
			@include button-main-styles;
			@include button-hover-styles;
		}
		
	}
}

// TODO: I'm not sure what the end goal should be here, but since we are unable to use
// a button block OUTSIDE of the context of the button collection block (grrrrrrrrr)
// then there are undesired margins to be dealt with somehow.
.wp-block-buttons {
	.wp-block-button:last-child {
		margin-bottom: 0;
	}
}
